server.port=8085

spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=false
spring.datasource.max-wait-millis=30000

spring.data.mongodb.mdapp-uri=mongodb://132.232.27.116:27017/mdapps

spring.data.mongodb.mdmap-uri=mongodb://132.232.27.116:27017/mdmap

spring.redis.host=132.232.27.116
spring.redis.password=
spring.redis.port=6379

md.MQConsumerThread.count=2

spring.redis.lettuce.pool.maxTotal=-1
spring.redis.lettuce.pool.maxIdle=100
spring.redis.lettuce.pool.minIdle=50
spring.redis.lettuce.pool.index=0
spring.redis.lettuce.pool.maxWaitMillis=-1


#============== KAFKA START===================
spring.kafka.listener.concurrency=5

spring.kafka.producer.bootstrap.servers=132.232.27.116:9092
spring.kafka.producer.retries= 3
spring.kafka.producer.buffer.memory=33554432
spring.kafka.producer.acks=0
#自定义配置，控制生产者是否发送消息
spring.kafka.producer.enable=false

spring.kafka.consumer.bootstrap.servers=132.232.27.116:9092
spring.kafka.consumer.s
spring.kafka.consumer.group.id=kafka-group-ryj
spring.kafka.consumer.enable.auto.commit=true
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.max.poll.records=10
#自定义配置，控制消费者是否监听
spring.kafka.consumer.enable=true
#============== KAFKA END======================

#============== TOPIC START======================
topic.testRecord=topic.testRecord
#============== TOPIC END======================